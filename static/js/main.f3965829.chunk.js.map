{"version":3,"sources":["components/services/storage.js","components/Header.js","components/Error.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["getItem","key","defaultValue","item","localStorage","JSON","parse","setItem","value","stringify","getSessionItem","sessionStorage","setSessionItem","removeSessionItem","removeItem","Header","props","history","useHistory","onBack","goBack","className","to","type","exact","path","onPress","window","confirm","deleteALLNote","Error","Props","defineIndex","index","setNoteIndex","ondeleteNote","new_Array","Array","from","setNotes","editorSave","note","notes","noteIndex","hostname","process","publicUrl","document","getElementById"],"mappings":"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","file":"static/js/main.f3965829.chunk.js","sourcesContent":["\r\nexport function getItem(key, defaultValue) {\r\n    let item = localStorage.getItem(key);\r\n    if (item) {\r\n        item = JSON.parse(item);\r\n        return item;\r\n    }\r\n    return defaultValue;\r\n}\r\nexport function setItem(key, value) {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n}\r\nexport function removeItem(key) {\r\n    localStorage.removeItem(key);\r\n}\r\n\r\nexport function getSessionItem(key, defaultValue) {\r\n    let item = sessionStorage.getItem(key);\r\n    if (item) {\r\n        item = JSON.parse(item);\r\n        return item;\r\n    }\r\n    return defaultValue;\r\n}\r\nexport function setSessionItem(key, value) {\r\n    sessionStorage.setItem(key, JSON.stringify(value));\r\n}\r\nexport function removeSessionItem(key) {\r\n    sessionStorage.removeItem(key)\r\n}","import React from 'react';\r\nimport { removeSessionItem } from './services/storage'; \r\nimport { Switch, Route, useHistory } from 'react-router-dom';\r\nimport '../App.css';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport 'react-awesome-button/src/styles/themes/theme-blue';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    const history = useHistory();\r\n\r\n    function onBack() {\r\n        history.goBack();\r\n        removeSessionItem('title');\r\n        removeSessionItem('content');\r\n    }\r\n\r\n    function deleteAll() {\r\n        let r = window.confirm(\"Are you sure you want to delete All?\");\r\n        if (r === true) {\r\n            props.deleteALLNote();\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <header className=\"App-header\">\r\n                <Link to=\"/Notepad/\" className=\"logo\"><span>NOTEPAD</span></Link>\r\n                <div>\r\n                    <Link to=\"/Notepad/\" className=\"btn\">\r\n                        <AwesomeButton type=\"primary\">Home</AwesomeButton>\r\n                    </Link>\r\n                    <Link to=\"/Notepad/AddN\" className=\"btn\">\r\n                        <AwesomeButton type=\"primary\">New Note</AwesomeButton>\r\n                    </Link>\r\n\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/Notepad\">\r\n                            <span className='btnBack'>\r\n                                <AwesomeButton type=\"secondary\" onPress={deleteAll}>Clear All</AwesomeButton>\r\n                            </span>\r\n                        </Route>\r\n                        <Route path=\"/Notepad/AddN\" exact>\r\n                            <span className='btnDelete btn-Clear'>\r\n                                <AwesomeButton type=\"secondary\" onPress={onBack}>Cancel</AwesomeButton>\r\n                            </span>\r\n                        </Route>\r\n                        <Route path=\"/Notepad/Editor\" exact>\r\n                            <span className='btnDelete btn-Clear'>\r\n                                <AwesomeButton type=\"secondary\" onPress={onBack}>Cancel</AwesomeButton>\r\n                            </span>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n\r\n            </header>\r\n        </>\r\n    );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport 'react-awesome-button/src/styles/themes/theme-blue';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Error() {\r\n    return (\r\n\r\n        <div className='page Error_P'>\r\n            <div className=\"Error_M\">\r\n                <h1>Error 404</h1>\r\n                <p>Sorry, The Page that you are trying to reach does NOT excist</p>\r\n            </div>\r\n            <Link to=\"/Notepad\" className='Error_btn'>\r\n                <AwesomeButton type=\"secondary\">Goback to Home</AwesomeButton>\r\n            </Link>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Home from './Home';\r\nimport Editor from './Editor';\r\nimport AddN from './AddN';\r\nimport Error from './Error';\r\n\r\nfunction Routes(Props) {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/Notepad\" exact><Home indexNote={Props.defineIndex} notes={Props.notes} deleteRow={Props.deleteNote} addNote={Props.addNote}/></Route>\r\n\r\n            <Route path=\"/Notepad/Editor\" exact render={props => localStorage.getItem('notes') !== null ? (<Editor saveChanges={Props.edSave} note={Props.noteItem} props />) : (<Redirect to={{ pathname: \"/Notepad\" }} />\r\n            )\r\n            } />\r\n            <Route path=\"/Notepad/AddN\"><AddN addNote={Props.addNote} /></Route>\r\n            <Route><Error /></Route>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React, { useState } from 'react';\nimport { getItem, setItem, removeItem, removeSessionItem} from './components/services/storage';\nimport './App.css';\nimport Header from './components/Header';\nimport Routes from './components/Routes';\r\n\n//onPress\n\nfunction App() {\n    const [notes, setNotes] = useState(getItem('notes')||[]);\n    const [noteIndex, setNoteIndex] = useState(getItem('index')||0);\n\n\n    //add new note\n    function addNote(note) {\n        let new_Array = Array.from(notes);\r\n        new_Array.push(note);\r\n        setNotes(new_Array);\r\n        setItem('notes', new_Array);\r\n    }\n\n    //get index\n    function onIndex(index) {\r\n        setNoteIndex(index);\r\n        setItem('index', index);\r\n    }\n\n    //edit\n    function editorSave(note) {\r\n        let new_Array = Array.from(notes);\r\n        new_Array[noteIndex] = note;\r\n        setNotes(new_Array);\r\n        setItem('notes', new_Array);\r\n    }\n\n    \n\n    //delete note\n    function ondeleteNote(index) {\n            let new_Array = Array.from(notes);\r\n            new_Array.splice(index, 1);\r\n        setNotes(new_Array);\r\n        setItem('notes', new_Array);\r\n    }\n\n    //delete ALL note\n    function deleteALLNote() {\r\n        let new_Array = [];\r\n        setNotes(new_Array);\r\n        removeItem('notes');\r\n        localStorage.clear();\r\n    }\n\n  return (\n      <div className=\"App\">\n          <Header deleteALLNote={deleteALLNote}/>\n          <Routes defineIndex={onIndex} edSave={editorSave} notes={notes} noteItem={notes[noteIndex]} addNote={addNote} deleteNote={ondeleteNote} />\n   \n          <footer className=\"App-footer\"> &copy; Erick's Notepad | <a href=\"https://www.linkedin.com/in/erick-da-fonseca-pachi-3a0331163/\" class=\"BLinks\" >LinkedIn</a> - <a href=\"https://erickpachi.github.io/Portfolio\" class=\"BLinks\" >Portfolio</a> - <a href=\"https://github.com/ErickPachi\" class=\"BLinks\" >Github</a></footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}